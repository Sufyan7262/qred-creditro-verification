apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "service.name" . }}
    helm.sh/chart: {{ include "service.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    qred.se/env: {{ .Values.environment }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        #livenessProbe:
        #  tcpSocket:
        #    port: http
        #readinessProbe:
        #  tcpSocket:
        #    port: http
        env:
        - name: spring.datasource.url
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}
              key: database_url
        - name: spring.datasource.username
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}
              key: database_user
        - name: spring.datasource.password
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: DB_password
        - name: com.qred.pagerank.apiKey
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: Pagerank_ApiKey      
        ports:
        - name: http
          containerPort: 80
      restartPolicy: Always

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      antiAffinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
